replicaCount: 2

image:
  repository: surisoft/capi:4.11.1
  pullPolicy: Always
  tag: ""

ssl:
  certificate:

network:
  subnet:
  security:
    group:
  scheme:
  host:
  loadbalancer:
  backend:
    protocol:
  target:
    ip:

waf:
  arn: ""

ingress:
  provider: aws
  className: alb
  cloudflare:
    enabled: false
    tunnelName: capi-tunnel

service:
  port: 8380

management:
  port: 8381
capi:
  instance:
    name: capi
    strict: false
  deployment:
    eks: false
    local: false
  name: capi
  namespace: capi-default
  throttling:
    enabled: true
  hazelcast:
    serviceDns: hazelcast-service.capi-default.svc.cluster.local
  metrics:
    host: capi-metrics.capi-default.svc.cluster.local
  context:
    path: /api/*
  trust:
    store:
      enabled: false
      path:
      password:
  consul:
    hosts: http://host.docker.internal:8500
    discovery:
      enabled: true
      timer:
        interval: 30000
  traces:
    enabled: false
    endpoint:

oauth2:
  provider:
    enabled: false
    keys:

opa:
  enabled: false
  endpoint:
  circuitBreaker:
    enabled: true

logging:
  level:
    root: INFO
  io:
    surisoft:
      capi:
        lb: TRACE
server:
  ssl:
    enabled: false
    key:
      store:
        type: JKS
        path:
        alias:
        password:
spring:
  profiles:
    active: dev
#Default trust store and certificate for localhost
trust:
  store:
    name:
    encoded:
certificate:
  name:
  encoded:

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

resources: {}

probes:
  liveness:
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3
  readiness:
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  metrics:
    - type: Pods
      pods:
        metricName: capi_inflight_requests
        targetAverageValue: 10

prometheus-adapter:
  enabled: true

nodeSelector: {}

tolerations: []

affinity: {}
